{"version":3,"file":"static/js/190.08cd3eee.chunk.js","mappings":"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","sources":["components/Body/Profile/Profile.module.css","redux/profileSelectors.ts","components/Body/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Body/Profile/ProfileInfo/ProfileInfo.tsx","webpack://socialnetwork-react18/./src/components/Body/Profile/MyPosts/MyPosts.module.css?3b40","components/Body/Profile/MyPosts/NewPost/NewPost.module.css","components/Body/Profile/MyPosts/NewPost/NewPost.tsx","webpack://socialnetwork-react18/./src/components/Body/Profile/MyPosts/Post/Post.module.css?7321","components/Body/Profile/MyPosts/Post/Post.tsx","components/Body/Profile/MyPosts/MyPosts.tsx","components/Body/Profile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__5Q+np\"};","import {AppRootStateType} from './reduxStore'\n\nexport const getPosts = (state: AppRootStateType) => state.profilePage.posts\nexport const getProfile = (state: AppRootStateType) => state.profilePage.profile\nexport const getStatus = (state: AppRootStateType) => state.profilePage.status","import React, {ChangeEvent, FocusEvent, useEffect, useState} from 'react'\nimport {updateStatus} from '../../../../../redux/profileReducer'\nimport {getStatus} from '../../../../../redux/profileSelectors'\nimport {useAppDispatch, useAppSelector} from '../../../../../hooks/hooks'\n\nexport const ProfileStatus = () => {\n    const dispatch = useAppDispatch()\n\n    const status = useAppSelector(getStatus)\n\n    const [editMode, setEditMode] = useState(false)\n    const [value, setValue] = useState(status)\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = (e: FocusEvent<HTMLInputElement, Element>) => {\n        dispatch(updateStatus(e.currentTarget.value))\n        setEditMode(false)\n    }\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setValue(e.currentTarget.value)\n    }\n    useEffect(() => {\n        setValue(status)\n    }, [status])\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{status || 'No Status'}</span>\n                </div>\n            }\n            {editMode &&\n                <input value={value}\n                       onChange={onStatusChange}\n                       onBlur={deactivateEditMode}/>\n            }\n        </div>\n    )\n}","import React from 'react'\nimport {useAppSelector} from '../../../../hooks/hooks'\nimport {getProfile} from '../../../../redux/profileSelectors'\nimport Preload from '../../../common/Preload/Preload'\n\nimport {ProfileStatus} from './ProfileStatus/ProfileStatus'\n\nexport const ProfileInfo = () => {\n    const profile = useAppSelector(getProfile)\n\n    if (!profile) {\n        return <Preload/>\n    }\n\n    return (\n        <div>\n            <img src={profile.photos.large} alt=\"avatar\"/>\n\n            <ProfileStatus/>\n\n            <h2>{profile.fullName}</h2>\n            <p>\n                <b>About me: </b>\n            </p>\n            <p>\n                <b>Looking for a job: </b>\n                {profile.lookingForAJob ? <span>{profile.lookingForAJobDescription}</span> : <span>no</span>}\n            </p>\n            <div>\n                <b>Contacts:</b>\n                {profile.contacts.facebook && <p><b>FaceBook:</b> {profile.contacts.facebook}</p>}\n                {profile.contacts.website && <p><b>Web-site:</b> {profile.contacts.website}</p>}\n                {profile.contacts.vk && <p><b>Vk:</b> {profile.contacts.vk}</p>}\n                {profile.contacts.twitter && <p><b>Twitter:</b> {profile.contacts.twitter}</p>}\n                {profile.contacts.instagram && <p><b>Instagram:</b> {profile.contacts.instagram}</p>}\n                {profile.contacts.youtube && <p><b>YouTube:</b> {profile.contacts.youtube}</p>}\n                {profile.contacts.github && <p><b>GitHub:</b> {profile.contacts.github}</p>}\n                {profile.contacts.mainLink && <p><b>MainLink:</b> {profile.contacts.mainLink}</p>}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__5osXF\"};","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react'\nimport s from './NewPost.module.css'\nimport {Field, InjectedFormProps, reduxForm, reset} from 'redux-form'\nimport {useAppDispatch} from '../../../../../hooks/hooks'\nimport {addPostAC} from '../../../../../redux/profileReducer'\nimport {Textarea} from '../../../../common/FormsControls/FormsControls'\nimport {maxLength300, required} from '../../../../../utils/validators/validators'\n\nexport const NewPost = () => {\n    const dispatch = useAppDispatch()\n    const addNewPost = (formData: FormDataType) => {\n        dispatch(addPostAC(formData.newPostText))\n        dispatch(reset('profileAddNewPostFormRedux'))\n    }\n\n    return (\n        <div className={s.content}>\n            <AddNewPostFormRedux onSubmit={addNewPost}/>\n        </div>\n    )\n}\n\ntype FormDataType = {\n    newPostText: string\n}\n\nconst AddPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name={'newPostText'}\n                       component={Textarea}\n                       placeholder={'New post text'}\n                       validate={[required, maxLength300]}/>\n            </div>\n            <div>\n                <button>New Post</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddNewPostFormRedux = reduxForm<FormDataType>({form: 'profileAddNewPostFormRedux'})(AddPostForm)","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__iRjSx\"};","import React from 'react'\nimport s from './Post.module.css'\nimport {useAppDispatch} from '../../../../../hooks/hooks'\nimport {deletePostAC} from '../../../../../redux/profileReducer'\n\ntype PostPropsType = {\n    id: string\n    message: string\n    likes: number\n}\n\nexport const Post: React.FC<PostPropsType> = React.memo(({id, message, likes}) => {\n    const dispatch = useAppDispatch()\n    const onDeleteButtonClick = () => {\n        dispatch(deletePostAC(id))\n    }\n\n    return (\n        <div className={s.content}>\n            <img\n                src=\"https://n1s2.starhit.ru/6a/46/ae/6a46aeed947a183d67d1bc48211151bf/480x496_0_2bbde84177c9ff1c2299a26a0f69f69c@480x496_0xac120003_4430520541578509619.jpg\"\n                alt=\"\"/>\n            <span>{message}</span>\n            <span>  Likes {likes}</span>\n            <button onClick={onDeleteButtonClick}>X</button>\n        </div>\n    )\n})","import React from 'react'\nimport s from './MyPosts.module.css'\nimport {NewPost} from './NewPost/NewPost'\nimport {Post} from './Post/Post'\nimport {useAppSelector} from '../../../../hooks/hooks'\nimport {getPosts} from '../../../../redux/profileSelectors'\n\nexport const MyPosts = () => {\n    const posts = useAppSelector(getPosts)\n\n    return (\n        <div className={s.content}>\n            <NewPost/>\n            {[...posts]\n                .reverse()\n                .map(post => <Post key={post.id}\n                                   id={post.id}\n                                   message={post.message}\n                                   likes={post.likes}/>)\n            }\n        </div>\n    )\n}","import React from 'react'\nimport s from './Profile.module.css'\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo'\nimport {MyPosts} from './MyPosts/MyPosts'\nimport {useAppDispatch, useAppSelector} from '../../../hooks/hooks'\nimport {Navigate, useParams} from 'react-router-dom'\nimport {getStatus, getUserProfile} from '../../../redux/profileReducer'\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\nimport {getIsAuth} from '../../../redux/authSelectors'\n\n\nexport const ProfileForRedirect = () => {\n    const dispatch = useAppDispatch()\n    const params = useParams()\n    const isAuth = useAppSelector(getIsAuth)\n\n    let {userId} = params\n    userId && dispatch(getUserProfile(+userId))\n    userId && dispatch(getStatus(+userId))\n\n    if (!isAuth) return <Navigate to=\"/login\"/>\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo/>\n            <MyPosts/>\n        </div>\n    )\n}\nexport default withAuthRedirect(ProfileForRedirect)\n"],"names":["getPosts","state","profilePage","posts","getProfile","profile","getStatus","status","ProfileStatus","dispatch","useAppDispatch","useAppSelector","useState","editMode","setEditMode","value","setValue","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","ProfileInfo","src","photos","large","alt","fullName","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preload","NewPost","className","s","AddNewPostFormRedux","onSubmit","formData","addPostAC","newPostText","reset","reduxForm","form","props","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","maxLength300","Post","React","id","message","likes","onClick","deletePostAC","MyPosts","reverse","map","post","ProfileForRedirect","params","useParams","isAuth","getIsAuth","userId","getUserProfile","to","withAuthRedirect"],"sourceRoot":""}